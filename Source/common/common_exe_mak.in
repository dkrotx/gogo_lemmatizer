#########################################
######## common part  ###################
#########################################

SYSTEMCXX=@ac_systemcxx@

ifeq "$(SYSTEMCXX)" "no"
	GCC_VERSION ?= 42
	CXX=g++${GCC_VERSION}
endif

ExeName := $(ExeBaseName)$(ExeExten)
objects := $(addsuffix .o$(ct),$(object_base_names))

possible_objects := $(foreach ct_value,$(ct_values),$(addsuffix .o$(ct_value),$(object_base_names)))

libs_argument := $(call construct_cxx_libs_flags,$(libs))

ifeq ($(libmode), static)
	lib_mode_switch := -static
endif

$(ExeName) : $(objects) $(libs)
	$(mode_error)
	$(CXX)  $(lib_mode_switch) $(lparams) $(CXX_LD_FLAGS) -o $(ExeName) $(objects) $(libs_argument) $(stllib) $(CXX_SHOBJ_FLAGS)
	cp $(ExeName) $(RML)/Bin/

$(libs): %$(ct).$(lib_ext) : FORCE
	$(mode_error)
	$(MAKE) -C $(dir $@) mode=$(mode) libmode=$(libmode)

$(objects): %.o$(ct) : %.cpp
	$(mode_error)
	$(CXX) $(cparams) $< -o $@


FORCE:

include $(wildcard *.d)

clean: ;
	-rm -f $(ExeName) $(possible_objects) *.d
	-for catal in $(dir $(libs)); do  $(MAKE) -C  $$catal mode=$(mode) clean; done

